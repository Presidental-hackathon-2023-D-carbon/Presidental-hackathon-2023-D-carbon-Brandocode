{"ast":null,"code":"var _jsxFileName = \"/Users/seansie/Desktop/2023 Agri Blockchain \\u7E3D\\u7D71\\u76C3/Backend/agri_code/agri-react/src/App.js\";\nimport React from 'react';\nimport { Admin, Resource, fetchUtils } from 'react-admin';\nimport { UserList } from './users';\nimport { PostList, PostEdit, PostShow, PostCreate } from './posts';\nimport { bcList, bcShow, bcCreate } from './blockchain/bcpost';\nimport { photoList, photoShow, photoCreate } from './blockchain/uploadfile';\nimport { adminPostShow, adminPostList, adminPostEdit, adminPostCreate } from './admin/posts';\nimport loginProvider from './loginProvider';\nimport jsonServerProvider from 'ra-data-json-server';\nimport addUploadFeature from './addUploadFeature';\nconst userResources = [React.createElement(Resource, {\n  name: \"post\",\n  options: {\n    label: \"案件清單\"\n  },\n  list: PostList,\n  edit: PostEdit,\n  show: PostShow,\n  create: PostCreate,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n})];\nconst adminResources = [React.createElement(Resource, {\n  name: \"user\",\n  options: {\n    label: \"權限管理\"\n  },\n  list: adminPostList,\n  edit: adminPostEdit,\n  show: adminPostShow,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n})];\n\nconst selectResources = () => {\n  if (localStorage.getItem('token') === 'admin') {\n    console.log(localStorage.getItem('token'));\n    return adminResources;\n  } else {\n    console.log(localStorage.getItem('token'));\n    return userResources;\n  }\n};\n\nconst httpClient = (url, options = {}) => {\n  if (!options.headers) {\n    options.headers = new Headers({\n      Accept: 'application/json',\n      credentials: 'include',\n      'content-type': 'application/json'\n    });\n  }\n\n  const token = localStorage.getItem('token');\n  options.headers.set('Authorization', \"Bearer \".concat(token));\n  return fetchUtils.fetchJson(url, options);\n}; // const dataProvider = jsonServerProvider('http://jsonplaceholder.typicode.com');\n\n\nconst dataProvider = jsonServerProvider('http://52.90.64.113:8000');\nconst uploadCapableDataProvider = addUploadFeature(dataProvider);\n\nconst App = () => React.createElement(Admin, {\n  dataProvider: uploadCapableDataProvider,\n  authProvider: loginProvider,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47\n  },\n  __self: this\n}, permissions => [// Restrict access to the edit and remove views to admin only\npermissions === 'admin' || permissions === 'user' ? [React.createElement(Resource, {\n  name: \"post\",\n  options: {\n    label: \"案件清單\"\n  },\n  list: PostList,\n  edit: PostEdit,\n  show: PostShow,\n  create: PostCreate,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51\n  },\n  __self: this\n})] // <Resource name=\"bcpost\" options={{ label: \"區塊鏈資料\" }} list={bcList} show={bcShow} />]\n: React.createElement(Resource, {\n  name: \"uploadfile\",\n  options: {\n    label: \"用戶上傳區\"\n  },\n  list: photoList,\n  show: photoShow,\n  create: photoCreate,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53\n  },\n  __self: this\n}), // Only include the categories resource for admin users\npermissions === 'admin' ? React.createElement(Resource, {\n  name: \"user\",\n  options: {\n    label: \"權限管理\"\n  },\n  list: adminPostList,\n  edit: adminPostEdit,\n  show: adminPostShow,\n  create: adminPostCreate,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56\n  },\n  __self: this\n}) : null]);\n\nexport default App;","map":{"version":3,"sources":["/Users/seansie/Desktop/2023 Agri Blockchain 總統盃/Backend/agri_code/agri-react/src/App.js"],"names":["React","Admin","Resource","fetchUtils","UserList","PostList","PostEdit","PostShow","PostCreate","bcList","bcShow","bcCreate","photoList","photoShow","photoCreate","adminPostShow","adminPostList","adminPostEdit","adminPostCreate","loginProvider","jsonServerProvider","addUploadFeature","userResources","label","adminResources","selectResources","localStorage","getItem","console","log","httpClient","url","options","headers","Headers","Accept","credentials","token","set","fetchJson","dataProvider","uploadCapableDataProvider","App","permissions"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Admin, Resource, fetchUtils } from 'react-admin';\nimport { UserList } from './users';\nimport { PostList, PostEdit, PostShow, PostCreate} from './posts';\nimport { bcList, bcShow, bcCreate } from './blockchain/bcpost';\nimport { photoList, photoShow, photoCreate } from './blockchain/uploadfile';\nimport { adminPostShow, adminPostList, adminPostEdit, adminPostCreate } from './admin/posts';\nimport loginProvider from './loginProvider';\nimport jsonServerProvider from 'ra-data-json-server';\nimport addUploadFeature from './addUploadFeature';\n\n\nconst userResources = [\n\t\t<Resource name=\"post\" options={{ label: \"案件清單\" }} list={PostList} edit={PostEdit} show={PostShow} create={PostCreate}/>,\n\t\t// <Resource name=\"bcpost\" options={{ label: \"區塊鏈資料\" }} list={bcList} show={bcShow} />,\n];\n\nconst adminResources = [\n\t\t<Resource name=\"user\" options={{ label: \"權限管理\" }} list={adminPostList} edit={adminPostEdit} show={adminPostShow}/>,\n];\n\nconst selectResources = () => {\n\t\tif (localStorage.getItem('token') === 'admin') {\n        console.log(localStorage.getItem('token'))\n\t\t\t\treturn adminResources\n\t\t}\n\t\telse {\n        console.log(localStorage.getItem('token'))\n\t\t\t\treturn userResources\n\t\t}\n}\n\nconst httpClient = (url, options = {}) => {\n    if (!options.headers) {\n        options.headers = new Headers({ Accept: 'application/json', credentials: 'include', 'content-type': 'application/json' });\n    }\n    const token = localStorage.getItem('token');\n    options.headers.set('Authorization', `Bearer ${token}`);\n    return fetchUtils.fetchJson(url, options);\n}\n\n// const dataProvider = jsonServerProvider('http://jsonplaceholder.typicode.com');\nconst dataProvider = jsonServerProvider('http://52.90.64.113:8000');\nconst uploadCapableDataProvider = addUploadFeature(dataProvider);\n\nconst App = () => (\n  <Admin dataProvider={uploadCapableDataProvider} authProvider={loginProvider}>\n  {permissions => [\n        // Restrict access to the edit and remove views to admin only\n       permissions === 'admin' || permissions === 'user' ?\n\t\t[<Resource name=\"post\" options={{ label: \"案件清單\" }} list={PostList} edit={PostEdit} show={PostShow} create={PostCreate}/>,]\n\t\t// <Resource name=\"bcpost\" options={{ label: \"區塊鏈資料\" }} list={bcList} show={bcShow} />]\n    : <Resource name=\"uploadfile\" options={{ label: \"用戶上傳區\" }} list={photoList} show={photoShow} create={photoCreate}/>,\n        // Only include the categories resource for admin users\n        permissions === 'admin'\n\t\t? <Resource name=\"user\" options={{ label: \"權限管理\" }} list={adminPostList} edit={adminPostEdit} show={adminPostShow} create={adminPostCreate}/>\n            : null,\n    ]}\n\t</Admin>\n);\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}