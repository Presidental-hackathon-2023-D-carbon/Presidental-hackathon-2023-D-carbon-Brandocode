{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $Number = GetIntrinsic('%Number%');\n\nvar isPrimitive = require('../helpers/isPrimitive');\n\nvar ToPrimitive = require('./ToPrimitive');\n\nvar StringToNumber = require('./StringToNumber'); // https://262.ecma-international.org/13.0/#sec-tonumber\n\n\nmodule.exports = function ToNumber(argument) {\n  var value = isPrimitive(argument) ? argument : ToPrimitive(argument, $Number);\n\n  if (typeof value === 'symbol') {\n    throw new $TypeError('Cannot convert a Symbol value to a number');\n  }\n\n  if (typeof value === 'bigint') {\n    throw new $TypeError('Conversion from \\'BigInt\\' to \\'number\\' is not allowed.');\n  }\n\n  if (typeof value === 'string') {\n    return StringToNumber(value);\n  }\n\n  return $Number(value);\n};","map":null,"metadata":{},"sourceType":"script"}